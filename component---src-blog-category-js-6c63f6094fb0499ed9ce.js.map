{"version":3,"sources":["webpack:///./src/blog/components/breadcrumbs.js","webpack:///./src/blog/components/post-preview.js","webpack:///./src/blog/category.js"],"names":["props","className","to","lastPath","lastName","currentPage","fluid","fluidImage","alt","slug","title","date","category","description","BlogIndex","render","posts","this","data","edges","hasNext","pageInfo","hasNextPage","pageContext","pageNumber","map","node","frontmatter","postImage","childImageSharp","metaDescription","nextPage","React","Component","blogListQuery"],"mappings":"yOAKe,G,UAAA,SAACA,GAAD,OACb,yBAAKC,UAAU,4EACb,kBAAC,IAAD,CACEC,GAAG,IACHD,UAAU,aAFZ,QAGA,qCACA,kBAAC,IAAD,CACEC,GAAIF,EAAMG,SACVF,UAAU,aAAaD,EAAMI,UAC/B,qCACA,0BAAMH,UAAU,YAAYD,EAAMK,gB,qBCTvB,WAACL,GAAD,OACb,yBAAKC,UAAU,kDACb,kBAAC,IAAD,CACEA,UAAU,kBACVK,MAAON,EAAMO,WACbC,IAAI,KACN,yBAAKP,UAAU,kBACb,0BAAMA,UAAU,iBACd,kBAAC,IAAD,CACEA,UAAU,yBACVC,GAAIF,EAAMS,MAAOT,EAAMU,QAE3B,yBAAKT,UAAU,mCACb,yBAAKA,UAAU,uCAAuCD,EAAMW,MAC5D,yBAAKV,UAAU,uCAAf,WAA8DD,EAAMY,WAEtE,yBAAKX,UAAU,oBAAoBD,EAAMa,gB,gBCb1BC,E,gLACnBC,OAAA,WACE,IAAMC,EAAQC,KAAKjB,MAAMkB,KAAKF,MAAMG,MAC9BC,EAAUH,KAAKjB,MAAMkB,KAAKF,MAAMK,SAASC,YACzCV,EAAWK,KAAKjB,MAAMuB,YAAYX,SACxC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEF,MAAK,gBAAkBE,EAAlB,WAAqCK,KAAKjB,MAAMuB,YAAYC,aACnE,yBAAKvB,UAAU,sDACb,wBAAIA,UAAU,qBAAd,gBAAgDW,IAElD,yBAAKX,UAAU,cACb,kBAAC,EAAD,CACEG,SAAUQ,EACVT,SAAQ,GAAKS,EACbP,YAAW,QAAUY,KAAKjB,MAAMuB,YAAYC,aAC7CR,EAAMS,KAAI,gBAAEC,EAAF,EAAEA,KAAF,OACT,kBAAC,EAAD,CACEnB,WAAYmB,EAAKC,YAAYC,UAAUC,gBAAgBvB,MACvDG,KAAMiB,EAAKC,YAAYlB,KACvBC,MAAOgB,EAAKC,YAAYjB,MACxBC,KAAMe,EAAKC,YAAYhB,KACvBC,SAAUc,EAAKC,YAAYf,SAC3BC,YAAaa,EAAKC,YAAYG,qBAElC,yBAAK7B,UAAU,kBACZmB,GACG,kBAAC,IAAD,CACEnB,UAAU,gDACVC,GAAIe,KAAKjB,MAAMuB,YAAYQ,UAF7B,mB,GA5BuBC,IAAMC,WAwChCC,EAAa","file":"component---src-blog-category-js-6c63f6094fb0499ed9ce.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport 'tachyons';\n\n\nexport default (props) => (\n  <div className=\"w-100 f6 pv3 flex items-center tracked ttu sans-serif justify-around mw5\">\n    <Link\n      to=\"/\"\n      className=\"dark-gray\">Home</Link>\n    <span>&nbsp;>&nbsp;</span>\n    <Link\n      to={props.lastPath}\n      className=\"dark-gray\">{props.lastName}</Link>\n    <span>&nbsp;>&nbsp;</span>\n    <span className=\"mid-gray\">{props.currentPage}</span>\n  </div>\n)\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport 'tachyons';\n\n\nexport default (props) => (\n  <div className=\"pv3 flex justify-center items-center flex-wrap\">\n    <Img\n      className=\"w-100 mw6 h-100\"\n      fluid={props.fluidImage}\n      alt=\"\" />\n    <div className=\"mw7 pa2 ph4-ns\">\n      <span className=\"db f2 display\">\n        <Link\n          className=\"dark-gray no-underline\"\n          to={props.slug}>{props.title}</Link>\n      </span>\n      <div className=\"mv3 mb5-ns flex justify-between\">\n        <div className=\"db f6 silver ttu tracked sans-serif\">{props.date}</div>\n        <div className=\"db f6 silver ttu tracked sans-serif\">TAGGED: {props.category}</div>\n      </div>\n      <div className=\"serif f4 lh-copy\">{props.description}</div>\n    </div>\n  </div>\n)\n","import React from 'react';\nimport Layout from '../common/layouts';\nimport { Link, graphql } from 'gatsby';\nimport Breadcrumbs from './components/breadcrumbs';\nimport Preview from './components/post-preview.js';\nimport Seo from '../common/seo';\nimport 'tachyons';\n\n\nexport default class BlogIndex extends React.Component {\n  render() {\n    const posts = this.props.data.posts.edges;\n    const hasNext = this.props.data.posts.pageInfo.hasNextPage;\n    const category = this.props.pageContext.category;\n    return (\n      <Layout>\n        <Seo\n          title={`Posts Tagged ${category} - Page ${this.props.pageContext.pageNumber}`} />\n        <div className=\"pv5 flex items-center justify-center bg-washed-red\">\n          <h1 className=\"fw1 tc f2 display\">Posts Tagged {category}</h1>\n        </div>\n        <div className=\"mw9 center\">\n          <Breadcrumbs\n            lastName={category}\n            lastPath={`${category}`}\n            currentPage={`Page ${this.props.pageContext.pageNumber}`} />\n          {posts.map(({node}) => (\n            <Preview\n              fluidImage={node.frontmatter.postImage.childImageSharp.fluid}\n              slug={node.frontmatter.slug}\n              title={node.frontmatter.title}\n              date={node.frontmatter.date}\n              category={node.frontmatter.category}\n              description={node.frontmatter.metaDescription} />\n          ))}\n          <div className=\"pv5 flex w-100\">\n            {hasNext &&\n                <Link\n                  className=\"dark-gray sans-serif ttu tracked no-underline\"\n                  to={this.props.pageContext.nextPage}>Next Page &rarr;</Link>\n            }\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\n\nexport const blogListQuery = graphql`\n  query categoryPosts($skip: Int!, $limit: Int!, $category: String!) {\n    posts: allMarkdownRemark(\n      filter: {frontmatter: {type: {eq: \"post\"}, category: {eq: $category}}},\n      sort: {fields: frontmatter___date, order: DESC},\n      limit: $limit,\n      skip: $skip,\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"MMM Do YYYY\")\n            category\n            metaDescription\n            slug\n            postImage {\n              childImageSharp {\n                fluid(maxWidth: 1080, maxHeight: 512) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n`\n"],"sourceRoot":""}